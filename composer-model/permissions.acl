/**
 * Sample access control list.
 */

 /**
  * Transaction ACL
  */

rule AllowAirlineHandleFlightServiceRequest {
  description:  "Allow Airline company to process flight request"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.HandleFlightServiceRequest"
  condition: (p.role === ROLE.OFFICER)
  action: ALLOW
}

rule AllowAirlineProcessFlightServiceDelivery {
  description:  "Allow Airline company to process flight request"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.ProcessFlightServiceDelivery"
  condition: (p.role === ROLE.STAFF)
  action: ALLOW
}

rule AllowGHAIssueFlightServiceRequest {
  description:  "Allow Authorised GHA to create Flight Service Request"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.IssueFlightServiceRequest"
  condition: (p.role === ROLE.OFFICER)
  action: ALLOW
}

rule AllowGHACollectCargoFromWarehouse {
  description:  "Allow Authorised GHA to collect cargo from warehouse"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.CollectCargoFromWarehouse"
  condition: (p.role === ROLE.STAFF)
  action: ALLOW
}

rule AllowCargoConfirmCargoToWarehouse {
  description:  "Allow Cargo Employee to collect cargo into warehouse"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.ConfirmCargoToWarehouse"
  condition: (p.role === ROLE.STAFF)
  action: ALLOW
}

rule AllowCargoAssignCargoToFlight {
  description:  "Allow Cargo Employee assign cargo to flight"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.AssignCargoToFlight"
  condition: (p.role === ROLE.OFFICER)
  action: ALLOW
}

rule AllowCargoAcceptCargoRequest {
  description:  "Allow Cargo Employee to accept incoming cargo request"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.AcceptCargoRequest"
  condition: (p.role === ROLE.OFFICER)
  action: ALLOW
}




/*
* Aircraft Management
*/

rule AllowAirlineReadAircraft {
  description: "Allow All to read Aircraft Information"
  participant: "org.airline.airChain.*"
  operation: READ
  resource: "org.airline.airChain.Aircraft"
  action: ALLOW
}

rule AllowAirlineManageAircraft {
  description:  "Allow Airline Company Officers to manage their own aircrafts"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Aircraft"
  condition: (p.role === ROLE.OFFICER && p.company.aircrafts.filter(function(aircraft) {return aircraft.getIdentifier() === r.getIdentifier()}).length === 1)
  action: ALLOW
}

/*
* Flight Management
*/

rule AllowGHAToViewFlight {
  description:  "Allow all GHA to view flights"
  participant: "org.airline.airChain.GHAEmployee"
  operation: READ
  resource: "org.airline.airChain.Flight"
  action: ALLOW
}

rule AllowCargoToViewFlight {
  description:  "Allow Cargo to view flights"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Flight"
  condition: (r.company.authorisedCargoCompany.getIdentifier() === p.company.getIdentifier())
  action: ALLOW
}

rule AllowAirlineManageFlight {
  description:  "Allow Airline Company to manage their own flights"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Flight"
  condition: (p.company.flights.filter(function(flight) {return flight.getIdentifier() === r.getIdentifier()}).length === 1)
  action: ALLOW
}


/*
* Cargo Management
*/

rule AllowAirlineOfficerViewCargo {
  description:  "Allow Airline Company Officers to view Cargo only if carog is attached to the flight"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Cargo"
  condition: (p.role === ROLE.OFFICER && p.company.flights.filter(function(flight) {return flight.getIndentifier() === r.flight.getIdentifier()}).length === 1)
  action: ALLOW
}

rule AllowGHAStaffViewCargo {
  description:  "Allow GHA staff to view Cargo only they are assigned to manage the cargo"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Cargo"
  condition: (p.role === ROLE.STAFF && (r.flight.collectCompany.getIdentifier() === p.company.getIdentifier() || r.flight.deliverCompany.getIndentifier() === p.company.getIndentifier()))
  action: ALLOW
}

rule AllowCargoCompanyToManageCargo {
  description:  "Allow Cargo Company to manage their own cargo"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Cargo"
  condition: (p.company.cargos.filter(function(cargo) {return cargo.getIdentifier() === r.getIdentifier()}).length === 1)
  action: ALLOW
}

/*
* Service Management
*/
rule AllowAirlineCompanyViewService {
  description:  "Allow Airline Company to view services attached to their flights"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Service"
  condition: (p.company.flights.filter(function(flight) {return flight.services.filter(function(service) {service.getIdentifier() === r.getIdentifier()}).length === 1}).length === 1)
  action: ALLOW
}

rule AllowGHACompanyToManageService {
  description:  "Allow Cargo Company to manage their own cargo"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Service"
  condition: (p.company.services.filter(function(service) {return service.getIdentifier() === r.getIdentifier()}).length === 1)
  action: ALLOW
}

/*
* Cargo Request Management
*/
rule AllowCargoCompanyViewCargoRequest {
  description:  "Allow all cargo company to view Cargo Request"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: READ, UPDATE
  resource (r): "org.airline.airChain.CargoRequest"
  condition: (p.role === ROLE.OFFICER)
  action: ALLOW
}


/*
* System Admin Access
*/

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}