/**
  * Create Transaction ACL
  */

rule AllowAirlineHandleFlightServiceRequest {
  description:  "Allow Airline company to process flight request"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.HandleFlightServiceRequest"
  condition: (p.role == "OFFICER")
  action: ALLOW
}

rule AllowAirlineProcessFlightServiceDelivery {
  description:  "Allow Airline company to process flight request"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.ProcessFlightServiceDelivery"
  condition: (p.role == "STAFF")
  action: ALLOW
}

rule AllowGHAIssueFlightServiceRequest {
  description:  "Allow Authorised GHA to create Flight Service Request"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.IssueFlightServiceRequest"
  condition: (p.role == "OFFICER")
  action: ALLOW
}

rule AllowGHACollectCargoFromWarehouse {
  description:  "Allow Authorised GHA to collect cargo from warehouse"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.CollectCargoFromWarehouse"
  condition: (p.role == "STAFF")
  action: ALLOW
}

rule AllowCargoConfirmCargoToWarehouse {
  description:  "Allow Cargo Employee to collect cargo into warehouse"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.ConfirmCargoToWarehouse"
  condition: (p.role == "STAFF")
  action: ALLOW
}

rule AllowCargoAssignCargoToFlight {
  description:  "Allow Cargo Employee assign cargo to flight"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.AssignCargoToFlight"
  condition: (p.role == "OFFICER")
  action: ALLOW
}

rule AllowCargoAcceptCargoRequest {
  description:  "Allow Cargo Employee to accept incoming cargo request"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: CREATE
  resource (r): "org.airline.airChain.AcceptCargoRequest"
  condition: (p.role == "OFFICER")
  action: ALLOW
}


 /**
  * Transaction ACL
  */

rule AllowAirlineOfficerUpdateService {
  description:  "Allow Airline Officer Update Service Status when handling service request"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: UPDATE
  resource (r): "org.airline.airChain.Service"
  transaction (txn): "org.airline.airChain.HandleFlightServiceRequest"
  condition: (r.status == "PENDING")
  action: ALLOW
}

rule AllowAirlineCabinCrewUpdateServiceDelivery {
   description:  "Allow Airline Cabin Crew Update Service Delivery Status"
   participant (p): "org.airline.airChain.AirlineEmployee"
   operation: UPDATE
   resource (r): "org.airline.airChain.Service"
   transaction (txn): "org.airline.airChain.ProcessFlightServiceDelivery"
   condition: (r.status == "APPROVED")
   action: ALLOW
 }

 rule AllowGHAOfficerUpdateFlight {
   description:  "Allow GHA Officer issue flight service request when issuing service request"
   participant (p): "org.airline.airChain.GHAEmployee"
   operation: UPDATE
   resource (r): "org.airline.airChain.Flight"
   transaction (txn): "org.airline.airChain.IssueFlightServiceRequest"
   condition: (txn.service.status == "PENDING")
   action: ALLOW
 }

  rule AllowGHAStaffUpdateCargo {
    description:  "Allow GHA Staff update Cargo when collecting cargo from warehouse"
    participant (p): "org.airline.airChain.GHAEmployee"
    operation: UPDATE
    resource (r): "org.airline.airChain.Cargo"
    transaction (txn): "org.airline.airChain.CollectCargoFromWarehouse"
    condition: (r.status == "APPROVED" && p.company.getIdentifier() == r.flight.collectCompany.getIdentifier())
    action: ALLOW
  }

  rule AllowCargoCompanyStaffToUpdateCargo {
   description:  "Allow Cargo Staff update cargo request's Cargo when collecting cargo into warehouse"
   participant (p): "org.airline.airChain.CargoEmployee"
   operation: UPDATE
   resource (r): "org.airline.airChain.Cargo"
   transaction (txn): "org.airline.airChain.ConfirmCargoToWarehouse"
   condition: (r.status == "COLLECTED" && p.company.getIdentifier() == r.flight.deliverCompany.getIdentifier())
   action: ALLOW
 }


  rule AllowCargoCompanyOfficerUpdateFlight {
    description:  "Allow Cargo Officer update cargo when assigning to flight"
    participant (p): "org.airline.airChain.CargoEmployee"
    operation: UPDATE
    resource (r): "org.airline.airChain.Flight"
    transaction (txn): "org.airline.airChain.AssignCargoToFlight"
    condition: (r.company.authorisedCargoCompany.getIdentifier() == p.company.getIdentifier() && txn.cargo.status == "COLLECTED" && (txn.cargo.company.getIdentifier() == p.company.getIdentifier() || txn.cargo.request.acceptedCompany.getIdentifier() == p.company.getIdentifier()))
    action: ALLOW
  }


  rule AllowCargoCompanyOfficerUpdateCargoRequest {
    description:  "Allow Cargo Officer update Cargo Request when accepting"
    participant (p): "org.airline.airChain.CargoEmployee"
    operation: UPDATE
    resource (r): "org.airline.airChain.CargoRequest"
    transaction (txn): "org.airline.airChain.AcceptCargoRequest"
    condition: (r.status == "CANCELLED" && !r.acceptedCompany && txn.flight.company.authorisedCargoCompany.getIdentifier() == p.company.getIdentifier())
    action: ALLOW
  }

/*
* Aircraft Management
*/

rule AllowAirlineReadAircraft {
  description: "Allow All to read Aircraft Information"
  participant: "org.airline.airChain.*"
  operation: READ
  resource: "org.airline.airChain.Aircraft"
  action: ALLOW
}

rule AllowAirlineManageAircraft {
  description:  "Allow Airline Company Officers to manage their own aircrafts"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Aircraft"
  condition: (p.role == "OFFICER")
  action: ALLOW
}

/*
* Flight Management
*/

rule AllowGHAToViewFlight {
  description:  "Allow all GHA to view flights"
  participant: "org.airline.airChain.GHAEmployee"
  operation: READ
  resource: "org.airline.airChain.Flight"
  action: ALLOW
}

rule AllowCargoToViewFlight {
  description:  "Allow Cargo to view flights"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Flight"
  condition: (r.company.authorisedCargoCompany.getIdentifier() == p.company.getIdentifier())
  action: ALLOW
}

rule AllowAirlineManageFlight {
  description:  "Allow Airline Company to manage their own flights"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Flight"
  condition: (true)
  action: ALLOW
}


/*
* Cargo Management
*/

rule AllowAirlineOfficerViewCargo {
  description:  "Allow Airline Company Officers to view Cargo only if cargo is attached to the flight"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Cargo"
  condition: (p.role == "OFFICER")
  action: ALLOW
}

rule AllowGHAStaffViewCargo {
  description:  "Allow GHA staff to view Cargo only they are assigned to manage the cargo"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Cargo"
  condition: (p.role == "STAFF")
  action: ALLOW
}

rule AllowCargoCompanyOfficerToViewCargoUnderRequest {
  description:  "Allow Cargo Company Officer to view cargo listed under requests"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Cargo"
  condition: (r.request && p.role == "OFFICER")
  action: ALLOW
}

rule AllowCargoCompanyToManageCargo {
  description:  "Allow Cargo Company to manage their own cargo"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Cargo"
  condition: (r.company.getIdentifier() == p.company.getIdentifier())
  action: ALLOW
}

/*
* Service Management
*/
rule AllowAirlineCompanyViewService {
  description:  "Allow Airline Company to view services attached to their flights"
  participant (p): "org.airline.airChain.AirlineEmployee"
  operation: READ
  resource (r): "org.airline.airChain.Service"
  condition: (r.flight.company.getIdentifier() == p.company.getIdentifier())
  action: ALLOW
}

rule AllowGHACompanyToManageService {
  description:  "Allow GHA to manager their own services"
  participant (p): "org.airline.airChain.GHAEmployee"
  operation: ALL
  resource (r): "org.airline.airChain.Service"
  condition: (r.company.getIdentifier() == p.company.getIdentifier())
  action: ALLOW
}

/*
* Cargo Request Management
*/
rule AllowCargoCompanyViewAndCreateCargoRequest {
  description:  "Allow all cargo company to view Cargo Request"
  participant (p): "org.airline.airChain.CargoEmployee"
  operation: READ, CREATE
  resource (r): "org.airline.airChain.CargoRequest"
  condition: (p.role == "OFFICER" && r.cargo.company.getIdentifier() == p.company.getIdentifier())
  action: ALLOW
}

/*
* Participant / Asset Management
*/
rule AllowOfficerManageEmployees {
  description:  "Allow Officer to manage their own employees"
  participant (p): "org.airline.airChain.Employee"
  operation: ALL
  resource (r): "org.airline.airChain.Employee"
  condition: (p.role == "OFFICER" && p.company.getIdentifier() == r.company.getIdentifier())
  action: ALLOW
}

rule AllowOfficerCreateThings {
  description:  "Allow Officer to create related participants/assets"
  participant (p): "org.airline.airChain.Employee"
  operation: CREATE
  resource (r): "org.hyperledger.composer.system.*"
  condition: (p.role == "OFFICER")
  action: ALLOW
}
/*
* System Configuration
*/

rule AllowRESTServerAccess {
  description:  "Allow All Participants to start Rest Server"
  participant: "org.hyperledger.composer.system.Participant"
  operation: READ
  resource: "org.hyperledger.composer.system.*"
  action: ALLOW
}

rule AllowEmployeeSeeOwnCompany {
  description:  "Allow All Participants see their own companies"
  participant: "org.airline.airChain.Employee"
  operation: READ
  resource: "org.airline.airChain.Company"
  action: ALLOW
}

rule AllowOfficerUpdateOwnCompany {
  description:  "Allow All Officer Update Own Company"
  participant (p): "org.airline.airChain.Employee"
  operation: UPDATE
  resource (r): "org.airline.airChain.Company"
  condition: (p.role == "OFFICER" && p.company.getIdentifier() == r.getIdentifier())
  action: ALLOW
}

/*
* System Admin Access
*/

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}