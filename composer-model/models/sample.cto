/**
 * Sample business network definition.
 */
namespace org.airline.airChain

asset AirlineCompany identified by id {
	o String id
    o String name
    --> Flight[] flights
    --> Aircraft[] aircrafts
    --> GHACompany[] authorisedGHAs
    --> CargoCompany authorisedCargoCompany
    --> Employee[] employees
}

asset GHACompany identified by id {
	o String id
    o String name
    --> Service[] services
    --> Employee[] employees
}

asset CargoCompany identified by id {
	o String id
    o String name
   	--> Cargo[] cargos
    --> Employee[] employees
}

asset Aircraft identified by id {
	o String id
    o String model
    o Integer passengerCapacity
    o Double cargoCapacity
    --> AirlineCompany company
}

asset Flight identified by id {
	o String id
    o String origin
    o String destination
    o DateTime time
    o Integer paxCount
    --> Aircraft aircraft
    --> Cargo[] cargos
    --> Service[] services
    --> AirlineCompany company
    --> Employee[] cabinCrews
}

enum CARGO_STATUS {
  	o PENDING
    o APPROVED
    o REJECTED
  	o COLLECTED
	o ON_FLIGHT
    o UNLOADED
  	o DELIVERED
}

asset Cargo identified by id {
	o String id
    o String cargoDescription
    o Double weight
    o CARGO_STATUS status
    --> CargoCompany cargoCompany
}

enum SERVICE_TYPE {
	o FOOD
    o CLEAN
}

enum SERVICE_STATUS {
	o PENDING
    o APPROVED
    o REJECTED
    o DONE
    o NOT_DONE
}

asset Service identified by id {
	o String id
    o String serviceDescription
 	o SERVICE_STATUS status
    o SERVICE_TYPE type
    --> GHACompany ghaCompany
}

enum ROLE {
	o STAFF
    o OFFICER
}

participant Employee identified by id {
	o String id
    o String name
    o ROLE role
}

transaction IssueFlightServiceRequest {
	--> Flight flight
    --> Service[] services
}

transaction HandleFlightServiceRequest {
	--> Service[] services
    o Boolean isApproved
}

transaction ConfirmFlightServiceDelivery {
	--> Service[] services
}

transaction CollectCargoFromWarehouse {
	--> Cargo[] cargos
}

transaction LoadCargo {
	--> Cargo[] cargos
}

transaction UnloadCargo {
	--> Cargo[] cargos
}

transaction AssignCargoToFlight {
	--> Cargo[] cargos
    --> Flight flight
}

transaction SendCargoAddOnRequest {
	--> Flight flight
    --> Cargo[] cargos
}

transaction HandleCargoAddOnRequest {
	--> Cargo[] cargos
    o Boolean isApproved
}

transaction ConfirmCargoToWarehouse {
	--> Cargo[] cargos
}